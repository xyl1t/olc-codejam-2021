#ifndef GAME_HPP
#define GAME_HPP

#include <olcPixelGameEngine.h>

// #define AUDIO_LISTENER_IMPLEMENTATION
// #include "olcPGEX_AudioListener.h"
//#define AUDIO_SOURCE_IMPLEMENTATION
// #include "olcPGEX_AudioSource.h"
#include "olcPGEX_Animator2D.h"
// #define CIDR_IMPLEMENTATION
// #include "cidr.hpp"
#include "box2d/box2d.h"

#include <vector>
#include <algorithm>
#include <memory>
#include <string>
#include <cmath>

#include "map.hpp"
#include "assets.hpp"
#include "player.hpp"
#include "common.hpp"

// #include "../mapGeneration/generation.cpp"

class Game : public olc::PixelGameEngine {
public:
	Game();

	// const float SCALE = 1.f;
	// const int PIXEL_SCALE = 3.f;
	
	std::vector<std::string> mapData {
		{"------------------------------------------------------------"},
		{"------------------------------------------------------------"},
		{"------------------------------------------------------------"},
		{"------------------------------------------------------------"},
		{"------------------------------------------------------------"},
		{"------------------------------------------------------------"},
		{"-------######################-----######################----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------#....................#-----#....................#----"},
		{"-------########...###########-----###########...########----"},
		{"--------------#...#-------------------------#...#-----------"},
		{"--------------#...#-------------------------#...#-----------"},
		{"--------------#...#-------------------------#...#-----------"},
		{"-------########...###########################...########----"},
		{"-------#...............................................#----"},
		{"-------#...............................................#----"},
		{"-------#...............................................#----"},
		{"-------#######################...#######################----"},
		{"-----------------------------#...#--------------------------"},
		{"-----------------------------#...#--------------------------"},
		{"-----------------------#######...#######--------------------"},
		{"-------##############--#...............#---##############---"},
		{"-------#............#--#...............#---#............#---"},
		{"-------#............#--#...............#---#............#---"},
		{"-------#............#--#...............#---#............#---"},
		{"-------#............#--#.........E.E...#---#............#---"},
		{"-------#............####.......E.EEE...#####............#---"},
		{"-------#........................E..E....................#---"},
		{"-------#......................P..E.EE...................#---"},
		{"-------#...........................E....................#---"},
		{"-------#............####...............#####............#---"},
		{"-------#............#--#...............#---#............#---"},
		{"-------#............#--#...............#---#............#---"},
		{"-------#............#--#...............#---#............#---"},
		{"-------#............#--#...............#---#............#---"},
		{"-------##############--#...............#---##############---"},
		{"-----------------------#######...#######--------------------"},
		{"-----------------------------#...#--------------------------"},
		{"-----------------------------#...#--------------------------"},
		{"-----------------------------#...#--------------------------"},
		{"-----------################--#...#--################--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------#..............####...####..............#--------"},
		{"-----------#.......................................#--------"},
		{"-----------#.......................................#--------"},
		{"-----------#..............####...####..............#--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------#..............#--#...#--#..............#--------"},
		{"-----------################--#...#--################--------"},
		{"-----------------------------#...#--------------------------"},
		{"-----------------------------#...#--------------------------"},
		{"-----------------------------#...#--------------------------"},
		{"------------------------------------------------------------"},
		{"------------------------------------------------------------"},
	};
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"-----#########################----"},
	// 	{"-----#...............#...#...#----"},
	// 	{"-----#..P............#...#...#----"},
	// 	{"-----#...............#...#...#----"},
	// 	{"-----#...........E.E.#...#...#----"},
	// 	{"-----#.........EEEEE.....##.##----"},
	// 	{"-----#..........EE...#...#...#----"},
	// 	{"-----#...........EEE.#...#...#----"},
	// 	{"-----#..........EE.EE#...#...#----"},
	// 	{"-----#......#..E..EE.#...#...#----"},
	// 	{"-----#....####.......#.......#----"},
	// 	{"-----#.......#......###.######----"},
	// 	{"-----#....####......#....#--------"},
	// 	{"-----#......#.......#....#--------"},
	// 	{"-----#..............#....#--------"},
	// 	{"-----#......E..E....#....#--------"},
	// 	{"-----#....E.E.E.E...#....#--------"},
	// 	{"-----#.....EE.E.....#....#--------"},
	// 	{"-----#....E.EE.EE...#....#--------"},
	// 	{"-----#...E..E.EE....#....#--------"},
	// 	{"-----#.....EE.......#....#--------"},
	// 	{"-----#..............#..###--------"},
	// 	{"-----#..............#..#----------"},
	// 	{"-----#.##############..#----------"},
	// 	{"-----#.#....#..........#----------"},
	// 	{"-----#.................#----------"},
	// 	{"-----#.#....#..........#----------"},
	// 	{"-----#.######..........#----------"},
	// 	{"-----#.................#----------"},
	// 	{"-----###################----------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// 	{"----------------------------------"},
	// };
	b2World* world;
	std::shared_ptr<Player> player;
	Map map = Map(32, 32); // TODO: make multiple maps (levels) and have a pointer to current one
	
	Assets assets;
	
	bool debugView{false};
	
	void DrawSprite(SpriteID spriteID, const olc::vf2d& pos);
	
public:
	bool OnUserCreate() override;	
	bool OnUserUpdate(float fElapsedTime) override;
};

#endif